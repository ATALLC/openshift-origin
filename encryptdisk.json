{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aadClientID": {
      "metadata": {
        "description": "Client ID of AAD app which has permissions to KeyVault"
      },
      "type": "string"
    },
    "aadClientSecret": {
      "metadata": {
        "description": "Client Secret of AAD app which has permissions to KeyVault"
      },
      "type": "securestring"
    },
    "diskFormatQuery": {
      "defaultValue": "",
      "metadata": {
        "description": "the query string used to identify the disks to format and encrypt. This parameter only works when you set the EncryptionOperation as EnableEncryptionFormat. For example, passing [{\"dev_path\":\"/dev/md0\",\"name\":\"encryptedraid\",\"file_system\":\"ext4\"}] will format /dev/md0, encrypt it and mount it at /mnt/dataraid. This parameter should only be used for RAID devices. The specified device must not have any existing filesystem on it."
      },
      "type": "string"
    },
    "encryptionOperation": {
      "allowedValues": [
        "EnableEncryption",
        "EnableEncryptionFormat"
      ],
      "defaultValue": "EnableEncryption",
      "metadata": {
        "description": "EnableEncryption would encrypt the disks in place and EnableEncryptionFormat would format the disks directly"
      },
      "type": "string"
    },
    "volumeType": {
      "allowedValues": [
        "OS",
        "Data",
        "All"
      ],
      "defaultValue": "Data",
      "metadata": {
        "description": "Defines which drives should be encrypted. OS encryption is supported on RHEL 7.2, CentOS 7.2 & Ubuntu 16.04."
      },
      "type": "string"
    },
    "keyEncryptionKeyURL": {
      "defaultValue": "",
      "metadata": {
        "description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key"
      },
      "type": "string"
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the KeyVault to place the volume encryption key"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource group of the KeyVault"
      }
    },
    "passphrase": {
      "defaultValue": "",
      "metadata": {
        "description": "The passphrase for the disks"
      },
      "type": "securestring"
    },
    "sequenceVersion": {
      "defaultValue": "1",
      "metadata": {
        "description": "sequence version of the bitlocker operation. Increment this everytime an operation is performed on the same VM"
      },
      "type": "string"
    },
    "useKek": {
      "allowedValues": [
        "nokek",
        "kek"
      ],
      "defaultValue": "nokek",
      "metadata": {
        "description": "Select kek if the secret should be encrypted with a key encryption key"
      },
      "type": "string"
    },
    "vmName": {
      "metadata": {
        "description": "Name of the virtual machine"
      },
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "masterVmSize": {
    "type": "string",
    "defaultValue": "Standard_DS3_v2",
    "allowedValues": [
      "Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
      "Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
      "Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
      "Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
      "Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
      "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
      "Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
      "Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
      "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
      "Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
      "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
      "Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
      "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
      "Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
      "Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
    ],
    "metadata": {
      "description": "OpenShift Master VM size"
    }
  },
  "nodeVmSize": {
    "type": "string",
    "defaultValue": "Standard_DS3_v2",
    "allowedValues": [
      "Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
      "Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
      "Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
      "Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
      "Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
      "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
      "Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
      "Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
      "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
      "Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
      "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
      "Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
      "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
      "Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
      "Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
    ],
    "metadata": {
      "description": "OpenShift Node VM(s) size"
    }
  },
  "infraVmSize": {
    "type": "string",
    "defaultValue": "Standard_DS3_v2",
    "allowedValues": [
      "Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
      "Standard_D1", "Standard_D2", "Standard_D3", "Standard_D4",
      "Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
      "Standard_D1_v2", "Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
      "Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
      "Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
      "Standard_D1_v2", "Standard_DS2", "Standard_DS3", "Standard_DS4",
      "Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
      "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
      "Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
      "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5",
      "Standard_D2_v3", "Standard_D4_v3", "Standard_D8_v3", "Standard_D16_v3", "Standard_D32_v3", "Standard_D64_v3",
      "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_D64s_v3",
      "Standard_E2_v3", "Standard_E4_v3", "Standard_E8_v3", "Standard_E16_v3", "Standard_E32_v3", "Standard_E64_v3",
      "Standard_E2s_v3", "Standard_E4s_v3", "Standard_E8s_v3", "Standard_E16s_v3", "Standard_E32s_v3", "Standard_E64s_v3"
    ],
    "metadata": {
      "description": "OpenShift Infra Node VM(s) size"
    }
  },
  "storageKind": {
    "type": "string",
    "defaultValue": "managed",
    "allowedValues": ["managed", "unmanaged"],
    "metadata": {
      "description": "Use Managed or Unmanaged Disks"
    }
  },
  "openshiftClusterPrefix": {
    "type": "string",
    "defaultValue": "mycluster",
    "minLength": 2,
    "maxLength": 20,
    "metadata": {
      "description": "OpenShift cluster prefix.  Used to generate master, infra and node hostnames.  Maximum of 20 characters."
    }
  },
  "masterInstanceCount": {
    "type": "int",
    "defaultValue": 3,
    "allowedValues": [1, 3, 5],
    "metadata": {
      "description": "Number of OpenShift masters."
    }
  },
  "infraInstanceCount": {
    "type": "int",
    "defaultValue": 3,
    "allowedValues": [1, 2, 3],
    "metadata": {
      "description": "Number of OpenShift infra nodes."
    }
  },
  "nodeInstanceCount": {
    "type": "int",
    "defaultValue": 2,
    "allowedValues": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
    "metadata": {
      "description": "Number of OpenShift nodes"
    }
  },
  "dataDiskSize": {
    "type": "int",
    "defaultValue": 64,
    "allowedValues": [32, 64, 128, 256, 512, 1024, 2048],
    "metadata": {
      "description": "Size of Datadisk in GB for Docker volume"
    }
  },
  "adminUsername": {
    "type": "string",
    "defaultValue": "clusteradmin",
    "minLength": 1,
    "metadata": {
      "description": "Administrator username on all VMs and first user created for OpenShift login"
    }
  },
  "openshiftPassword": {
    "type": "securestring",
    "minLength": 1,
    "metadata": {
      "description": "Password for OpenShift user to login to OpenShift Console"
    }
  },
  "sshPublicKey": {
    "type": "string",
    "metadata": {
      "description": "SSH public key for all VMs"
    }
  },
  "enableMetrics": {
    "type": "string",
    "defaultValue": "false",
    "allowedValues": [
      "true", "false"
    ],
    "metadata": {
      "description": "Enable OpenShift Metrics: true or false"
    }
  },
  "enableLogging": {
    "type": "string",
    "defaultValue": "false",
    "allowedValues": [
      "true", "false"
    ],
    "metadata": {
      "description": "Enable OpenShift Logging: true or false"
    }
  },
  "keyVaultResourceGroup": {
    "type": "string",
    "minLength": 1,
    "metadata": {
      "description": "Resource Group that contains the Key Vault"
    }
  },
  "keyVaultName": {
    "type": "string",
    "minLength": 1,
    "metadata": {
      "description": "Name of the Key Vault"
    }
  },
  "keyVaultSecret": {
    "type": "string",
    "minLength": 1,
    "metadata": {
      "description": "Key Vault Secret Name that contains the Private Key"
    }
  },
  "enableAzure": {
    "type": "string",
    "defaultValue": "true",
    "allowedValues": [
      "true", "false"
    ],
    "metadata": {
      "description": "Enable Azure as Cloud Provider - true or false"
    }
  },
  "aadClientId": {
    "type": "string",
    "defaultValue": "",
    "metadata": {
      "description": "Azure AD Client ID"
    }
  },
  "aadClientSecret": {
    "type": "securestring",
    "defaultValue": "",
    "metadata": {
      "description": "Azure AD Client Secret"
    }
  },
  "defaultSubDomainType": {
    "type": "string",
    "defaultValue": "nipio",
    "allowedValues": [
      "nipio", "custom"
    ],
    "metadata": {
      "description": "Default Subdomain type - nip.io or custom (defined in next parameter)"
    }
  },
  "defaultSubDomain": {
    "type": "string",
    "defaultValue": "contoso.com",
    "metadata": {
      "description": "Default Subdomain for application routing (Wildcard DNS) - must enter something even if you are using nip.io"
    }

 },
  "variables": {
    "extensionName": "AzureDiskEncryptionForLinux",
    "extensionVersion": "0.1",
    "keyEncryptionAlgorithm": "RSA-OAEP",
    "updateVmUrl": "[concat(parameters('_artifactsLocation'), '/', '201-encrypt-running-linux-vm', '/', 'updatevm-', parameters('useKek'), '.json', parameters('_artifactsLocationSasToken'))]",
    "keyVaultURL": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/')]",
    "keyVaultResourceID": "[concat(subscription().id,'/resourceGroups/',parameters('keyVaultResourceGroup'),'/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/', variables('extensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "protectedSettings": {
          "AADClientSecret": "[parameters('aadClientSecret')]",
          "Passphrase": "[parameters('passphrase')]"
        },
        "publisher": "Microsoft.Azure.Security",
        "settings": {
          "AADClientID": "[parameters('aadClientID')]",
          "DiskFormatQuery": "",
          "EncryptionOperation": "EnableEncryption",
          "KeyEncryptionAlgorithm": "[variables('keyEncryptionAlgorithm')]",
          "KeyEncryptionKeyURL": "[parameters('keyEncryptionKeyURL')]",
          "KeyVaultURL": "[variables('keyVaultURL')]",
          "SequenceVersion": "1.0",
          "VolumeType": "ALL"
        },
        "type": "AzureDiskEncryptionForLinux",
        "typeHandlerVersion": "[variables('extensionVersion')]"
      }
    },
    {
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',  parameters('vmName'), variables('extensionName'))]"
      ],
      "name": "[concat(parameters('vmName'), 'updateVm')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "keyEncryptionKeyURL": {
            "value": "[parameters('keyEncryptionKeyURL')]"
          },
          "keyVaultResourceID": {
            "value": "[variables('keyVaultResourceID')]"
          },
          "keyVaultSecretUrl": {
            "value": "[reference(resourceId('Microsoft.Compute/virtualMachines/extensions',  parameters('vmName'), variables('extensionName'))).instanceView.statuses[0].message]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          }
        },
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[variables('updateVmUrl')]"
        }
      }
    }
  ],
  "outputs": {
    "BitLockerKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Compute/virtualMachines/extensions',  parameters('vmName'), variables('extensionName'))).instanceView.statuses[0].message]"
    }
  }
}
